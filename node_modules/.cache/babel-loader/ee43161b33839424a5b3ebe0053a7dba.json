{"ast":null,"code":"var _jsxFileName = \"/home/cah/NLW/06-together/letmeask/src/pages/Room.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport logoImg from \"../assets/images/logo.svg\";\nimport { Button } from '../components/Button';\nimport { RoomCode } from '../components/RoomCode';\nimport { useAuth } from '../hooks/useAuth';\nimport { database } from '../services/firebase';\nimport '../styles/room.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Room() {\n  _s();\n\n  const [newQuestion, setNewQuestion] = useState('');\n  const {\n    user\n  } = useAuth();\n  const params = useParams();\n  const roomId = params.id;\n\n  async function handleSendNewQuestion(event) {\n    event.preventDefault();\n\n    if (newQuestion.trim() === '') {\n      return;\n    }\n\n    if (!user) {\n      throw new Error('You must be logged in.');\n    }\n\n    const question = {\n      content: newQuestion,\n      author: {\n        name: user.name,\n        avatar: user.avatar\n      },\n      isHighlighted: false,\n      isAnswered: false\n    };\n    await database.ref(`rooms/${roomId}/questions`).push(question);\n    setNewQuestion('');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"Letmeask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RoomCode, {\n          code: roomId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sala React\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"4 perguntas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendNewQuestion,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Digite sua perguta.\",\n          onChange: event => setNewQuestion(event.target.value),\n          value: newQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Para enviar uma pergunta, \", /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"fa\\xE7a seu login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: !user,\n            children: \"Enviar pergunta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Room, \"OHYAH42oQ6ZDX5jHncJ4at4xIew=\", false, function () {\n  return [useAuth, useParams];\n});\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/home/cah/NLW/06-together/letmeask/src/pages/Room.tsx"],"names":["useState","useParams","Button","RoomCode","useAuth","database","Room","newQuestion","setNewQuestion","user","params","roomId","id","handleSendNewQuestion","event","preventDefault","trim","Error","question","content","author","name","avatar","isHighlighted","isAnswered","ref","push","logoImg","target","value"],"mappings":";;;AAAA,SAAoBA,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AAEA,OAAO,qBAAP;;AAMA,OAAO,SAASC,IAAT,GAAgB;AAAA;;AACrB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAES,IAAAA;AAAF,MAAWL,OAAO,EAAxB;AACA,QAAMM,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAMU,MAAM,GAAGD,MAAM,CAACE,EAAtB;;AAEA,iBAAeC,qBAAf,CAAqCC,KAArC,EAAuD;AACrDA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIR,WAAW,CAACS,IAAZ,OAAuB,EAA3B,EAA+B;AAC7B;AACD;;AAED,QAAI,CAACP,IAAL,EAAW;AACT,YAAM,IAAIQ,KAAJ,CAAU,wBAAV,CAAN;AACD;;AAED,UAAMC,QAAQ,GAAG;AACfC,MAAAA,OAAO,EAAEZ,WADM;AAEfa,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAEZ,IAAI,CAACY,IADL;AAENC,QAAAA,MAAM,EAAEb,IAAI,CAACa;AAFP,OAFO;AAMfC,MAAAA,aAAa,EAAE,KANA;AAOfC,MAAAA,UAAU,EAAE;AAPG,KAAjB;AAUA,UAAMnB,QAAQ,CAACoB,GAAT,CAAc,SAAQd,MAAO,YAA7B,EAA0Ce,IAA1C,CAA+CR,QAA/C,CAAN;AAEAV,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD;;AAED,sBACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,4BACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AAAK,UAAA,GAAG,EAAGmB,OAAX;AAAqB,UAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAGhB;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAM,QAAA,QAAQ,EAAGE,qBAAjB;AAAA,gCACE;AACE,UAAA,WAAW,EAAC,qBADd;AAEE,UAAA,QAAQ,EAAGC,KAAK,IAAIN,cAAc,CAACM,KAAK,CAACc,MAAN,CAAaC,KAAd,CAFpC;AAGE,UAAA,KAAK,EAAGtB;AAHV;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AAAA,kEAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,QAAQ,EAAG,CAACE,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GA5DeH,I;UAEGF,O,EACFH,S;;;KAHDK,I","sourcesContent":["import { FormEvent, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport logoImg from '../assets/images/logo.svg';\nimport { Button } from '../components/Button';\nimport { RoomCode } from '../components/RoomCode';\nimport { useAuth } from '../hooks/useAuth';\nimport { database } from '../services/firebase';\n\nimport '../styles/room.scss';\n\ntype RoomParams = {\n  id: string;\n}\n\nexport function Room() {\n  const [newQuestion, setNewQuestion] = useState('');\n  const { user } = useAuth();\n  const params = useParams<RoomParams>();\n  const roomId = params.id;\n\n  async function handleSendNewQuestion(event: FormEvent) {\n    event.preventDefault();\n    if (newQuestion.trim() === '') {\n      return;\n    }\n\n    if (!user) {\n      throw new Error('You must be logged in.');\n    }\n\n    const question = {\n      content: newQuestion,\n      author: {\n        name: user.name,\n        avatar: user.avatar\n      },\n      isHighlighted: false,\n      isAnswered: false\n    };\n\n    await database.ref(`rooms/${roomId}/questions`).push(question);\n\n    setNewQuestion('');\n  }\n\n  return (\n    <div id=\"page-room\">\n      <header>\n        <div className=\"content\">\n          <img src={ logoImg } alt=\"Letmeask\" />\n          <RoomCode code={ roomId } />\n        </div>\n      </header>\n      <main className=\"content\">\n        <div className=\"room-title\">\n          <h1>Sala React</h1>\n          <span>4 perguntas</span>\n        </div>\n\n        <form onSubmit={ handleSendNewQuestion }>\n          <textarea\n            placeholder=\"Digite sua perguta.\"\n            onChange={ event => setNewQuestion(event.target.value) }\n            value={ newQuestion }\n          />\n\n          <div className=\"form-footer\">\n            <span>Para enviar uma pergunta, <button>fa√ßa seu login</button></span>\n            <Button type=\"submit\" disabled={ !user }>Enviar pergunta</Button>\n          </div>\n        </form>\n      </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}